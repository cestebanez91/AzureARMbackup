{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "comments": "This template is released under an as-is, best effort, and is community supported.",
    "author": "Matt McLimans (mmclimans@paloaltonetworks.com)"
  },
  "parameters": {
    "addedVMSeriesName": {
      "defaultValue": "vmseries-vm2",
      "type": "string"
    },
    "licenseType": {
      "type": "string",
      "defaultValue": "byol",
      "allowedValues": [
        "byol",
        "bundle1",
        "bundle2",
        "bundle2-for-ms"
      ],
      "metadata": {
        "description": "More info: https://docs.paloaltonetworks.com/vm-series/8-1/vm-series-deployment/license-the-vm-series-firewall/license-typesvm-series-firewalls"
      }
    },
    "(opt.) AppendStringToResources": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If the NAME and CONFIGURATION of the created LBs/NSGs/VMs/AVSET/VNET match an existing LBs/NSGs/VMs/AVSET/VNET in the SAME resource group, the template will its skip creation.  If the new resource NAME matches, but the resource CONFIGURATION does not, the template will fail or will overwrite the existing resource."
      }
    }
  },
  "variables": {
    "COMMENT_global": "GLOBAL VARIABLES SHARED AMONG DEPLOYED RESOURCES",
    "global_var_resource_group": "[resourceGroup().name]",
    "global_var_appendedString": "[if(equals(parameters('(opt.) AppendStringToResources'), ''), '', parameters('(opt.) AppendStringToResources'))]",
    "global_var_idleTimeoutInMinutes": 4,
    "global_var_allocationMethod": "Dynamic",
    "global_var_networkVersion": "IPv4",
    "global_var_apiVersion": "2018-06-01",
    "global_var_tier": "Regional",
    "global_var_sku": "Standard",
    "global_vnet_name": "vmseries-vnet",
    "global_vnet_resource_group": "[resourceGroup().name]",
    "global_vnet_subnet0_name": "mgmt-subnet",
    "global_vnet_subnet1_name": "untrust-subnet",
    "global_vnet_subnet2_name": "trust-subnet",
    "global_fw_mgmtnsg_name": "[concat(variables('fw_computerName'),'-nsg-mgmt')]",
    "global_fw_dataNsg_name": "[concat(variables('fw_computerName'),'-nsg-data')]",
    "global_fw_interface0_pip_option": "Yes",
    "global_fw_interface1_pip_option": "Yes",
    "global_fw_storageAccountType": "Standard_LRS",
    "global_fw_adminUsername": "paloalto",
    "global_fw_adminPassword": "PanPassword123!",
    "global_fw_diskSizeGB": 60,
    "global_bootstrap_storageAccount": "mrmdemo01",
    "global_bootstrap_accessKey": "ufOuiDH0cpTV0swolczL10RVBYVikDPvPwb7LtJHB0soPmFzuNgrSM427ckwUQmuGvM0lIjur6QhAKqysa3P/Q==",
    "global_bootstrap_shareDirectory": "",
    "global_fw_publisher": "paloaltonetworks",
    "global_fw_license": "[parameters('licenseType')]",
    "global_fw_version": "[if(equals(variables('global_fw_license'), 'bundle2-for-ms'), '8.1.00', '8.1.0')]",
    "global_fw_product": "[if(equals(variables('global_fw_license'), 'bundle2-for-ms'), 'vmseries-forms', 'vmseries1')]",
    "global_fw_vmSize": "Standard_DS3_v2",
    "global_fw_enableAcceleratedNetworking": "false",
    "global_fw_avset_option": "Create new availability set",
    "global_fw_avset_name": "vmseries-fw-as",
    "global_fw_avset_id": {
      "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('global_fw_avset_name'))]"
    },

    "COMMENT_nsg": "NSG TEMPLATE VARIABLES",
    "nsg_mgmt_inbound_rule_name": "allow-inbound-https-ssh",
    "nsg_mgmt_inbound_rule_sourceAddress": "0.0.0.0/0",
    "nsg_mgmt_inbound_rule_ports": [
      "22",
      "443"
    ],
    "nsg_data_inbound_rule_name": "allow-all-inbound",
    "nsg_data_outbound_rule_name": "allow-all-outbound",

    "COMMENT_publicLb": "PUBLIC LB TEMPLATE VARIABLES",
    "publicLb_name": "vmseries-public-lb",
    "publicLb_resource_group": "[resourceGroup().name]",
    "publicLb_pool_name": "LoadBalancerBackendPool",

    "COMMENT_internalLb": "INTERNAL LB TEMPLATE VARIABLES",
    "internalLb_name": "vmseries-internal-lb",
    "internalLb_resource_group": "[resourceGroup().name]",
    "internalLb_pool_name": "LoadBalancerBackendPool",

    "COMMENT_fw2": "FW2 TEMPLATE VARIABLES",
    "fw_computerName": "[take(replace(replace(concat(parameters('addedVMSeriesName'), variables('global_var_appendedString')), ' ', ''), '_', ''), 64)]",
    "fw_interface0_name": "[take(replace(concat(parameters('addedVMSeriesName'), '-nic0', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw_interface1_name": "[take(replace(concat(parameters('addedVMSeriesName'), '-nic1', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw_interface2_name": "[take(replace(concat(parameters('addedVMSeriesName'), '-nic2', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw_interface0_pip_name": "[take(replace(concat(parameters('addedVMSeriesName'),'-nic0-pip', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw_interface1_pip_name": "[take(replace(concat(parameters('addedVMSeriesName'),'-nic1-pip', variables('global_var_appendedString')), ' ', ''), 80)]",
    "fw_interface0_pip_id": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fw_interface0_pip_name'))]" },
    "fw_interface1_pip_id": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fw_interface1_pip_name'))]" },
    "fw_bootstrap_fileShare": "transit-2fw-3nic-avset-intlb-extlb-2spokes",
    "fw_bootstrap": "[concat('storage-account=', variables('global_bootstrap_storageAccount'), ',access-key=', variables('global_bootstrap_accessKey'), ',file-share=', variables('fw_bootstrap_fileShare'), ',share-directory=', variables('global_bootstrap_shareDirectory'))]"
  },
  "resources": [
    {
      "comments": "CREATE FIREWALL MGMT & DATA NSGS",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_NSGS",
      "apiVersion": "[variables('global_var_apiVersion')]",
      "resourceGroup": "[resourceGroup().name]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[variables('global_fw_mgmtnsg_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "[variables('nsg_mgmt_inbound_rule_name')]",
                    "properties": {
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "[variables('nsg_mgmt_inbound_rule_sourceAddress')]",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": "100",
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": "[variables('nsg_mgmt_inbound_rule_ports')]",
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "name": "[variables('global_fw_dataNsg_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "securityRules": [
                  {
                    "name": "[variables('nsg_data_inbound_rule_name')]",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": "100",
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "[variables('nsg_data_outbound_rule_name')]",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": "100",
                      "direction": "Outbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "comments": "CREATE FW2 WITH INTERFACES",
      "type": "Microsoft.Resources/deployments",
      "name": "CREATE_FW2",
      "apiVersion": "[variables('global_var_apiVersion')]",
      "resourceGroup": "[resourceGroup().name]",
      "dependsOn": [
        "CREATE_NSGS"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "condition": "[equals(variables('global_fw_interface0_pip_option'), 'Yes')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "sku": {
                "name": "[variables('global_var_sku')]",
                "tier": "[variables('global_var_tier')]"
              },
              "name": "[variables('fw_interface0_pip_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]"
              }
            },
            {
              "condition": "[equals(variables('global_fw_interface1_pip_option'), 'Yes')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "sku": {
                "name": "[variables('global_var_sku')]",
                "tier": "[variables('global_var_tier')]"
              },
              "name": "[variables('fw_interface1_pip_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "publicIPAddressVersion": "[variables('global_var_networkVersion')]",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": "[variables('global_var_idleTimeoutInMinutes')]"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw_interface0_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                      "publicIpAddress": "[if(equals(variables('global_fw_interface0_pip_option'),'Yes'), variables('fw_interface0_pip_id'), json('null'))]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet0_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]"
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_mgmtnsg_name'))]"
                },
                "tapConfigurations": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('fw_interface0_pip_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw_interface1_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                      "publicIpAddress": "[if(equals(variables('global_fw_interface1_pip_option'),'Yes'), variables('fw_interface1_pip_id'), json('null'))]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet1_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]",
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[concat(resourceId(variables('publicLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('publicLb_name')), '/backendAddressPools/', variables('publicLb_pool_name'))]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_dataNsg_name'))]"
                },
                "tapConfigurations": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('fw_interface1_pip_name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[variables('fw_interface2_name')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "[variables('global_var_allocationMethod')]",
                      "subnet": {
                        "id": "[concat(resourceId(variables('global_vnet_resource_group'), 'Microsoft.Network/virtualNetworks', variables('global_vnet_name')), '/subnets/', variables('global_vnet_subnet2_name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "[variables('global_var_networkVersion')]",
                      "loadBalancerBackendAddressPools": [
                        {
                          "id": "[concat(resourceId(variables('internalLb_resource_group'), 'Microsoft.Network/loadBalancers', variables('internalLb_name')), '/backendAddressPools/', variables('internalLb_pool_name'))]"
                        }
                      ]
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[variables('global_fw_enableAcceleratedNetworking')]",
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('global_fw_dataNsg_name'))]"
                },
                "tapConfigurations": []
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "name": "[variables('fw_computerName')]",
              "apiVersion": "[variables('global_var_apiVersion')]",
              "location": "[resourceGroup().location]",
              "plan": {
                "name": "[variables('global_fw_license')]",
                "product": "[variables('global_fw_product')]",
                "publisher": "[variables('global_fw_publisher')]"
              },
              "properties": {
                "availabilitySet": "[if(equals(variables('global_fw_avset_option'),'Do not use availability set'), json('null'), variables('global_fw_avset_id'))]",
                "hardwareProfile": {
                  "vmSize": "[variables('global_fw_vmSize')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "[variables('global_fw_publisher')]",
                    "offer": "[variables('global_fw_product')]",
                    "sku": "[variables('global_fw_license')]",
                    "version": "[variables('global_fw_version')]"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "[variables('global_fw_storageAccountType')]"
                    },
                    "diskSizeGB": "[variables('global_fw_diskSizeGB')]"
                  }
                },
                "osProfile": {
                  "computerName": "[variables('fw_computerName')]",
                  "adminUsername": "[variables('global_fw_adminUsername')]",
                  "adminPassword": "[variables('global_fw_adminPassword')]",
                  "customData": "[base64(variables('fw_bootstrap'))]"
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw_interface0_name'))]",
                      "properties": {
                        "primary": true
                      }
                    },
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw_interface1_name'))]",
                      "properties": {
                        "primary": false
                      }
                    },
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fw_interface2_name'))]",
                      "properties": {
                        "primary": false
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw_interface0_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw_interface1_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fw_interface2_name'))]"
              ]
            }
          ]
        }
      }
    }
  ]
} 
